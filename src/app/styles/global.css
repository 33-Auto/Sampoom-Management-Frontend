@import "tailwindcss";
@import "./theme.css";

@plugin "@tailwindcss/forms";

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/

@layer base {
  /* Default Button Styles */
  /* button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-weight: 500;
    border-radius: 0.5rem;
    padding: 0.5rem 1rem;
    background-color: var(--color-main-500);
    color: var(--color-white);
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 200ms;
  }
  button:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  } */

  /* Default Input Styles */
  input {
    padding: 0.5rem 0.75rem;
    border: 1px solid var(--color-grey-300);
    border-radius: 0.5rem;
    font-size: 0.875rem;
    background-color: var(--color-white);
    color: var(--color-grey-900);
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 200ms;
  }
  .dark input {
    background-color: var(--color-bg-card-black);
    border-color: var(--color-grey-600);
    color: var(--color-grey-100);
  }
  input::placeholder {
    color: var(--color-grey-400);
  }
  .dark input::placeholder {
    color: var(--color-grey-500);
  }
  input:focus {
    outline: none;
    border-color: var(--color-main-500);
  }

  /* Default Select Styles */
  select {
    appearance: none;
    padding: 0.5rem 2rem 0.5rem 0.75rem;
    border: 1px solid var(--color-grey-300);
    border-radius: 0.5rem;
    font-size: 0.875rem;
    background-color: var(--color-white);
    color: var(--color-grey-900);
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 200ms;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%23444444' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.5rem center;
    background-repeat: no-repeat;
    background-size: 1.5em 1.5em;
  }
  .dark select {
    background-color: var(--color-bg-card-black);
    border-color: var(--color-grey-600);
    color: var(--color-grey-100);
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236B7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  }
  select:focus {
    outline: none;
    border-color: var(--color-main-500);
  }

  /* Default Table Styles */
  table {
    width: 100%;
    border-collapse: collapse;
  }
  th,
  td {
    padding: 1rem 1.5rem;
    text-align: left;
    border-bottom: 1px solid var(--color-grey-200);
  }
  .dark th,
  .dark td {
    border-bottom-color: var(--color-grey-700);
  }
  th {
    font-weight: 500;
    font-size: 0.75rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: var(--color-grey-700);
    background-color: var(--color-grey-100);
  }
  .dark th {
    background-color: var(--color-grey-800);
    color: var(--color-grey-200);
  }
  td {
    font-size: 0.875rem;
    color: var(--color-grey-900);
  }
  .dark td {
    color: var(--color-grey-100);
  }

  /* Default Border Color */
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-grey-200, currentColor);
  }
}
html,
body {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
}

#root {
  height: 100%;
  width: 100%;
}

body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family:
    source-code-pro, Menlo, Monaco, Consolas, "Courier New", monospace;
}

.react-logo {
  margin: auto;
  height: 30vmin;
  pointer-events: none;
  animation: react-logo-spin infinite 20s linear;
}

@keyframes react-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
